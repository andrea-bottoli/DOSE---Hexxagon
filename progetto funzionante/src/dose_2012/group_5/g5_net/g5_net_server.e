note
	description: "This class is responsable of the communication with all clients through sockets and with the LOGIC component of the Server through APIs and Observer pattern."
	author: "Luca Falsina"
	date: "17.11.2012"
	revision: "1.1"

class
	G5_NET_SERVER

inherit
	G5_INET_TO_LOGIC
	SOCKET_RESOURCES
	STORABLE

create
	make

feature -- Status report

	reception_socket: detachable NETWORK_STREAM_SOCKET
			-- This socket is the one who will wait for clients request of connection.

	max_connections: INTEGER
	 		-- This integer represents the maximum number of simultaneos connections to this server.

	client_sockets: detachable HASH_TABLE[NETWORK_STREAM_SOCKET, STRING]
			-- This is the table of the sockets connected to this server. Every socket will be linked
			-- with a playing client and it will be identified with the validated player name, that
			-- the client used to identify itself during the previous connection process with the server.

--	current_socket: INTEGER
			-- This index simply remembers the position in the client_sockets list of the current
			-- player. It will be useful to grant a correct behaviour for the method
			-- send_message_to() with target equals to "CURRENT".

feature {ANY} -- Initialization performed by G5_LAUNCHER

	make (port_number: INTEGER; number_max_clients: INTEGER)
			-- This constructor intializes the Server class and makes it wait for clients
			-- on the port, specified by the parameter. The number_of_clients will specify the
			-- maximum number of socket connections.
		require
			valid_port_number: port_number > 1024 and port_number < 5000
			valid_clients_numbr: number_max_clients >= 2 and number_max_clients <= 4
		do
		ensure
			-- server is ready and it will wait for new clients on port port_number.
			max_connections = number_max_clients
		end

feature {G5_NET_SERVER, TEST_SET_G5_NET_SERVER} -- Communication through sockets

	send_message_to (socket_message: G5_MESSAGE)
			-- This feature is used when the net server must send a specific message received from
			-- the LOGIC component to all the desired clients, listed in the target array of the
			-- G5_MESSAGE instance, through their sockets.
		require
			valid_message: socket_message /= void
			consistent_source: socket_message.source.is_equal ("SERVER")
			consistent_targets:
				socket_message.targets.for_all (agent (name: STRING): BOOLEAN
					do Result := (not(name.is_equal ("SERVER"))) end)
		do
		ensure
			-- G5_MESSAGE is sent only to the correct clients.
		end

	require_message_from(source_names: ARRAY [STRING])
			-- This procedure will be invoked every time a server start waiting for a G5_MESSAGE
			-- sent by one or more sources, whose name is reported in the array source_name.
		require
			valid_sources:
				source_names /= void and
				source_names.for_all (agent (name: STRING): BOOLEAN
					do Result := (name /= void and not(name.is_equal ("SERVER"))) end)
		do
		ensure
			-- Server will wait only for the messages generated by the desidered clients
		end


invariant
	-- class invariant

	max_connections_is_valid:
		max_connections >= client_sockets.count

--	current_index_is_valid:
--		current_socket >= 0 and current_socket <= max_connections
end
