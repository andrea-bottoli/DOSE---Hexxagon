note
	description	: "Main window for the game."
	author		: "Generated by the New Vision2 Application Wizard and modified by Christos Petropoulos"

class
	CP_MAIN_WINDOW

inherit
	EV_TITLED_WINDOW
		redefine
			initialize
		end

	CP_MAIN_WINDOW_INTERFACES
		export
			{NONE} all
		undefine
			default_create, copy
		end


create
	make

feature {NONE} -- Initialization

	main_ui: MAIN_WINDOW

	make(a_main_ui_window: MAIN_WINDOW)
			-- Creation procedure
		do
				-- Store the main_ui object. We want to restore it later on (it's currently minimized).
			main_ui := a_main_ui_window
			make_with_title (window_title)
			disable_user_resize
		end

	initialize
			-- Build the interface for this window.
		do
			Precursor {EV_TITLED_WINDOW}

				-- Execute `request_close_window' when the user clicks
				-- on the cross in the title bar.
			close_request_actions.extend (agent request_close_window)
			create main_menu.make (current)

			put(main_menu)


			-- Set the title of the window
			set_title (Window_title)

		end

feature {NONE} -- Implementation, Close event

	request_close_window
			-- The user wants to close the window
		local
			question_dialog: EV_CONFIRMATION_DIALOG
		do
			create question_dialog.make_with_text (Label_confirm_close_window)
			question_dialog.show_modal_to_window (current)

			if question_dialog.selected_button.is_equal ((create {EV_DIALOG_CONSTANTS}).ev_ok) then
					-- Destroy the window
				destroy;

			end
		end

feature -- Set View

	set_view_to_join
		-- Sets the view to the join game menu
	do
		wipe_out
		main_menu.destroy
		create join_dialog.make (current)
		put(join_dialog)

	end

	set_view_to_main_menu
		-- Sets the view to the main menu
	do
		wipe_out
		if(join_dialog/=Void)then
			join_dialog.destroy
		else
			create_dialog.destroy
		end
		create main_menu.make (current)
		put(main_menu)
	end

	set_view_to_create
		-- Sets the view to the create game menu
	do
		wipe_out
		main_menu.destroy
		create create_dialog.make (current)
		put(create_dialog)
	end

	set_view_to_game
		-- Sets the view to the game board
	do
		wipe_out
		create game_view.make(current)
		put(game_view)
	end

feature -- Set Connection


	start_server(port:INTEGER)
	do
		create server.make_server (port)
		server.process
	end


	start_client(ip:STRING;port:INTEGER)
	do
		create client.make (ip, port)
		client.process
	end

feature -- Attributes

	-- Network Handlers
	server : CP_SERVER
	client : CP_CLIENT
	player : CP_PLAYER

feature {NONE} -- Attributes

	-- View Handlers
	main_menu:CP_MAIN_MENU
	join_dialog:CP_JOIN_GAME_DIALOG
	create_dialog:CP_CREATE_GAME_DIALOG
	game_view:CP_GAME_VIEW

feature {NONE} -- Implementation / Constants

	Window_title: STRING = "Hive Board Game"
			-- Title of the window.

	Window_width: INTEGER = 900
			-- Initial width for this window.

	Window_height: INTEGER = 350
			-- Initial height for this window.

end
